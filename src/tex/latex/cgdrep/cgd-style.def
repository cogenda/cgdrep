% cgd-style.def : Typeset style definitions
% vim:ft=tex

%%%% Itemize/Enumerate/Description
\setlist[itemize]{nosep}
\setlist[enumerate]{nosep}
\setlist[description]{nosep}
\newenvironment{paraitem}{\begin{itemize}[itemsep=0.3\baselineskip]}{\end{itemize}}
\setlength{\parskip}{0.3\baselineskip}

%%%% Table
\newcommand{\thickhline}{%
    \noalign {\ifnum 0=`}\fi \hrule height 1pt
    \futurelet \reserved@a \@xhline
}

\newenvironment{ctable}[3]
{\begin{table}[htbp]\centering\small
\caption{\label{#1}#2}\begin{tabu}{#3}\thickhline \rowfont{\bfseries}}
{\thickhline\end{tabu}\end{table}}

%%% space around captions
\captionsetup[table]{aboveskip=0pt}
\captionsetup[table]{belowskip=0pt}
\captionsetup[figure]{aboveskip=0pt}
\captionsetup[figure]{belowskip=0pt}
\captionsetup[lstlisting]{aboveskip=0pt}
\captionsetup[lstlisting]{belowskip=0pt}

%%%% Source code listing setup
\lstset{ %
  backgroundcolor=\color{OldLace},
  basicstyle=\footnotesize\ttfamily,
  breakatwhitespace=false,         % sets if automatic breaks should only happen at whitespace
  breaklines=true,                 % sets automatic line breaking
  captionpos=b,                    % sets the caption-position to bottom
  commentstyle=\color{DarkGreen},      % comment style
  deletekeywords={...},            % if you want to delete keywords from the given language
  escapeinside={\%*}{*)},          % if you want to add LaTeX within your code
  extendedchars=true,              % lets you use non-ASCII characters; for 8-bits encodings only, does not work with UTF-8
%  frame=single,                    % adds a frame around the code
  columns=flexible,                % use natural char width of the font, since we use mono-space fonts
  keepspaces=true,                 % keeps spaces in text, useful for keeping indentation of code (possibly needs columns=flexible)
  keywordstyle=\color{blue},       % keyword style
  language={},                     % the language of the code
  morekeywords={*,...},            % if you want to add more keywords to the set
  numbers=left,                    % where to put the line-numbers; possible values are (none, left, right)
  numbersep=5pt,                   % how far the line-numbers are from the code
  numberstyle=\scriptsize\color{DarkSlateGray},  % the style that is used for the line-numbers
  rulecolor=\color{black},         % if not set, the frame-color may be changed on line-breaks within not-black text (e.g. comments (green here))
  showspaces=false,                % show spaces everywhere adding particular underscores; it overrides 'showstringspaces'
  showstringspaces=false,          % underline spaces within strings only
  showtabs=false,                  % show tabs within strings adding particular underscores
  tabsize=4,                       % sets default tabsize to 4 spaces
  stepnumber=1,                    % the step between two line-numbers. If it is 1, each line will be numbered
  stringstyle=\color{DarkCyan},       % string literal style
  title=\lstname                   % show the filename of files included with \lstinputlisting; also try caption instead of title
}


%%%% Character styles
\newcommand\filename[1]{{\small\ttfamily #1}}       % File name
\newcommand\command[1]{{\bfseries\small\ttfamily #1}}     % command name
\newcommand\parameter[1]{{\small\ttfamily #1}}      % parameter name
\newcommand\userinput[1]{{\sl\small\ttfamily #1}}   % user's input

% GUI Menu
\NewDocumentCommand\guimenu{>{\SplitList{>}}m}
{%
  {\ProcessList{#1}{\guimenuitem}}%
}
\newtcbox{\CGD@menu@box}{nobeforeafter,
  colframe=LightGray,colback=LightGray!10!white,boxrule=0.5pt,arc=3pt,
  boxsep=0pt,left=2pt,right=2pt,top=2pt,bottom=2pt,tcbox raise base}
\newcommand\guimenuitem[1]{\CGD@menu@box{#1}\let\guimenuitem\guimenuitema}
\newcommand\guimenuitema[1]{\raisebox{1pt}{\color{Gray}â–¸}\CGD@menu@box{#1}}

\newcommand*{\cleartoleftpage}{%
  \clearpage
    \if@twoside
    \ifodd\c@page
      \hbox{}\newpage
      \if@twocolumn
        \hbox{}\newpage
      \fi
    \fi
  \fi
}

% memory address
\newtcbox{\CGD@addr@box}{nobeforeafter,
  colframe=LightGray,colback=black!5!white,boxrule=0.5pt,arc=1pt,
  boxsep=0pt,left=0pt,right=0pt,top=1pt,bottom=1pt,tcbox raise base}
\newcommand\addrMem[1]{\CGD@addr@box{\ttfamily\LightMono {\small#1}}}                   % memory address in hexdecimals
\newcommand\addrHex[1]{\CGD@addr@box{\ttfamily\LightMono {\scriptsize 0X}{\small#1}}}   % memory address in hexdecimals
\newcommand\addrBin[1]{\CGD@addr@box{\ttfamily\LightMono {\scriptsize 0b}{\small#1}}}   % memory address in hexdecimals

% circuit module/net/pin
\newtcbox{\CGD@circ@box}{nobeforeafter,
  colframe=LightGray,colback=LightGray!10!white,boxrule=0.5pt,arc=3pt,
  boxsep=0pt,left=2pt,right=2pt,top=2pt,bottom=2pt,tcbox raise base}
\newcommand\circMod[1]{{\CGD@circ@box{\small\ttfamily #1}}}             % circuit module name
\newcommand\circPin[1]{{\small\ttfamily #1}}                            % circuit pin name
\newcommand\circNet[1]{{\small\ttfamily\LightMono #1}}                  % circuit net/signal name
\newcommand\circReg[1]{{\CGD@circ@box{\small\ttfamily\LightMono #1}}}   % circuit register name

\endinput

